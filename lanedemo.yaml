openapi: 3.1.0
info:
  title: Lane Universal ACP Adapter (Demo)
  version: "1.0.0"
  description: >
    Minimal public spec for Lane's demo commerce flow:
    1) GET /feed.json → list products
    2) POST /checkout_sessions → create session
    3) GET/POST /checkout_sessions/{session_id} → read/update session
    4) POST /checkout_sessions/{session_id}/complete → complete checkout

servers:
  - url: https://acp-adapter-backend.onrender.com

components:
  securitySchemes:
    api_key:
      type: apiKey
      in: header
      name: Authorization

  parameters:
    IdempotencyKey:
      name: Idempotency-Key
      in: header
      required: false
      schema:
        type: string
    RequestId:
      name: Request-Id
      in: header
      required: false
      schema:
        type: string
    SessionId:
      name: session_id
      in: path
      required: true
      schema:
        type: string

# ✂️ (unchanged schemas here — same as your current file)

paths:
  /health:
    get:
      operationId: healthCheck
      summary: Health check
      responses:
        "200":
          description: OK

  /feed.json:
    get:
      operationId: getProductFeed
      summary: Fetch product feed
      security: [ { api_key: [] } ]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFeed'

  /checkout_sessions:
    post:
      operationId: createCheckoutSession
      summary: Create checkout session
      security: [ { api_key: [] } ]
      parameters:
        - $ref: '#/components/parameters/IdempotencyKey'
        - $ref: '#/components/parameters/RequestId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckoutSessionCreateRequest'
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckoutSession'

  /checkout_sessions/{session_id}:
    get:
      operationId: getCheckoutSession
      summary: Get checkout session
      security: [ { api_key: [] } ]
      parameters:
        - $ref: '#/components/parameters/SessionId'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckoutSession'

    post:
      operationId: updateCheckoutSession
      summary: Update checkout session
      security: [ { api_key: [] } ]
      parameters:
        - $ref: '#/components/parameters/SessionId'
        - $ref: '#/components/parameters/IdempotencyKey'
        - $ref: '#/components/parameters/RequestId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckoutSessionUpdateRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckoutSession'

  /checkout_sessions/{session_id}/complete:
    post:
      operationId: completeCheckoutSession
      summary: Complete checkout session
      security: [ { api_key: [] } ]
      parameters:
        - $ref: '#/components/parameters/SessionId'
        - $ref: '#/components/parameters/IdempotencyKey'
        - $ref: '#/components/parameters/RequestId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckoutSessionCompleteRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckoutSession'
